<?xml version="1.0" encoding="utf-8"?>
<PROG NAME="ZMOCKUP_LOADER_SWITCH_SOURCE" VARCL="X" SUBC="1" APPL="*" RMAND="100" RLOAD="E" FIXPT="X" UCCHECK="X">
 <textPool>
  <language SPRAS="E">
   <textElement ID="R" ENTRY="Switch mockup source via SET/GET params" LENGTH="39 "/>
  </language>
 </textPool>
 <source>*/--------------------------------------------------------------------------------\
*| This file is part of Mockup loader                                             |
*|                                                                                |
*| The MIT License (MIT)                                                          |
*|                                                                                |
*| Copyright (c) 2015 SBCG Team (www.sbcg.com.ua), Alexander Tsybulsky            |
*|                                                                                |
*| Permission is hereby granted, free of charge, to any person obtaining a copy   |
*| of this software and associated documentation files (the &quot;Software&quot;), to deal  |
*| in the Software without restriction, including without limitation the rights   |
*| to use, copy, modify, merge, publish, distribute, sublicense, and/or sell      |
*| copies of the Software, and to permit persons to whom the Software is          |
*| furnished to do so, subject to the following conditions:                       |
*|                                                                                |
*| The above copyright notice and this permission notice shall be included in all |
*| copies or substantial portions of the Software.                                |
*|                                                                                |
*| THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR     |
*| IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,       |
*| FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE    |
*| AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER         |
*| LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  |
*| OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  |
*| SOFTWARE.                                                                      |
*\--------------------------------------------------------------------------------/
*/--------------------------------------------------------------------------------\
*| CONTRIBUTORS                                                                   |
*|--------------------------------------------------------------------------------|
*| Leading developers : Alexander Tsybulsky (atsybulsky@sbcg.com.ua)              |
*|                      Svetlana Shlapak    (sshlapak@sbcg.com.ua)                |
*| Testing and ideas:   Bohdan Petruschak   (b.petrushchak@sbcg.com.ua)           |
*|--------------------------------------------------------------------------------|
*| project homepage: https://github.com/sbcgua/mockup_loader                      |
*\--------------------------------------------------------------------------------/


report zmockup_loader_switch_source.
tables sscrfields.

*&amp;---------------------------------------------------------------------*
*&amp;      Selection screen
*&amp;---------------------------------------------------------------------*
selection-screen begin of block b1 with frame title txt_b1.
selection-screen begin of line.
parameters p_undef type char1 radiobutton group gr1 user-command gr1.
selection-screen comment (10) txt_und  for field p_undef.
selection-screen end of line.

selection-screen begin of line.
parameters p_mime type char1 radiobutton group gr1.
selection-screen comment (10) txt_mime for field p_mime.
selection-screen end of line.

selection-screen begin of line.
parameters p_file type char1 radiobutton group gr1.
selection-screen comment (10) txt_file for field p_file.
selection-screen end of line.

selection-screen begin of line.
selection-screen comment (15) txt_fp for field p_file.
parameters p_fpath type char128.
selection-screen end of line.

selection-screen begin of line.
selection-screen comment (15) txt_mp for field p_file .
parameters: p_mpath type char40.
selection-screen end of line.
selection-screen end of block b1.

selection-screen: function key 1.


*&amp;---------------------------------------------------------------------*
*&amp;      Screen events
*&amp;---------------------------------------------------------------------*
initialization.

  txt_b1   = &apos;Source type (switch saves parameter immediately)&apos;. &quot;#EC NOTEXT
  txt_und  = &apos;Undefined&apos;.                                   &quot;#EC NOTEXT
  txt_mime = &apos;MIME&apos;.                                        &quot;#EC NOTEXT
  txt_file = &apos;FILE&apos;.                                        &quot;#EC NOTEXT
  txt_fp   = &apos;File path&apos;.                                   &quot;#EC NOTEXT
  txt_mp   = &apos;MIME object&apos;.                                 &quot;#EC NOTEXT

  sscrfields-functxt_01 = &apos;Get SU3 value&apos;.                  &quot;#EC NOTEXT

  perform get_stype.

at selection-screen output.
  perform insert_into_excl(rsdbrunt) using &apos;ONLI&apos;. &quot;exclude Execute button
  perform set_stype.

at selection-screen on radiobutton group gr1.
  perform set_stype.

at selection-screen on value-request for p_fpath.
  perform f4_file_path changing p_fpath.

at selection-screen on value-request for p_mpath.
  perform f4_mime_path changing p_mpath.

at selection-screen on p_fpath.
  if p_file is not initial.
    set parameter id &apos;ZMOCKUP_LOADER_SPATH&apos; field p_fpath.
  endif.

at selection-screen on p_mpath.
  if p_mime is not initial.
    set parameter id &apos;ZMOCKUP_LOADER_SPATH&apos; field p_mpath.
  endif.

at selection-screen.
  case sy-ucomm.
    when &apos;FC01&apos;.          &quot;Get SU3 value
    perform get_su3_value.
  endcase.

*&amp;---------------------------------------------------------------------*
*&amp;      Form  set_stype
*&amp;---------------------------------------------------------------------*
form set_stype.
  data: l_stype type char4.

  if p_file is not initial.
    l_stype = &apos;FILE&apos;.
    clear: p_mpath.

    loop at screen.
      case screen-name.
        when &apos;P_MPATH&apos; or &apos;TXT_MP&apos;.
          screen-active = 0.
        when &apos;P_FPATH&apos; or &apos;TXT_FP&apos;.
          screen-active = 1.
      endcase.
      modify screen.
    endloop.

  elseif p_mime is not initial.
    l_stype = &apos;MIME&apos;.
    clear: p_fpath.
    loop at screen.
      case screen-name.
        when &apos;P_MPATH&apos; or &apos;TXT_MP&apos;.
          screen-active = 1.
        when &apos;P_FPATH&apos; or &apos;TXT_FP&apos;.
          screen-active = 0.
      endcase.
      modify screen.
    endloop.

  elseif p_undef is not initial.
    clear l_stype.
    loop at screen.
      case screen-name.
        when &apos;P_MPATH&apos; or &apos;P_FPATH&apos; or &apos;TXT_FP&apos; or &apos;TXT_MP&apos;.
          screen-active = 0.
      endcase.
      modify screen.
    endloop.
  endif.

  set parameter id &apos;ZMOCKUP_LOADER_STYPE&apos; field l_stype.

endform.                    &quot;set_stype

*&amp;---------------------------------------------------------------------*
*&amp;      Form  get_stype
*&amp;---------------------------------------------------------------------*
form get_stype.
  data: l_stype type char4,
        l_spath type char128.

  get parameter id &apos;ZMOCKUP_LOADER_STYPE&apos; field l_stype.
  get parameter id &apos;ZMOCKUP_LOADER_SPATH&apos; field l_spath.
  clear: p_fpath, p_mpath.

  case l_stype.
    when &apos;FILE&apos;.
      p_file  = &apos;X&apos;.
      p_fpath = l_spath.
    when &apos;MIME&apos;.
      p_mime  = &apos;X&apos;.
      p_mpath = l_spath.
    when others.
      p_undef = &apos;X&apos;.
  endcase.
endform.                    &quot;get_stype

*&amp;---------------------------------------------------------------------*
*&amp;      Form  set_file_path
*&amp;---------------------------------------------------------------------*
form f4_file_path changing c_path.
  data: l_path type localfile.

  call function &apos;F4_FILENAME&apos;
    importing
      file_name = l_path.

  c_path = l_path.
  set parameter id &apos;ZMOCKUP_LOADER_SPATH&apos; field l_path.
endform.                    &quot;set_file_path

*&amp;---------------------------------------------------------------------*
*&amp;      Form  set_mime_path
*&amp;---------------------------------------------------------------------*
form f4_mime_path changing c_path.
  types:
    begin of t_data,
      objid type wwwdata-objid,
      text  type wwwdata-text,
    end of t_data.

  data:
        ls_return type ddshretval,
        lt_data   type table of t_data,
        lt_return type table of ddshretval.

  select distinct objid text from wwwdata
    into corresponding fields of table lt_data
    where relid = &apos;MI&apos;
    and   objid like &apos;Z%&apos;
    order by objid.

  call function &apos;F4IF_INT_TABLE_VALUE_REQUEST&apos;
    exporting
      retfield        = &apos;OBJID&apos;
      dynprofield     = &apos;P_MPATH&apos;
      value_org       = &apos;S&apos;
    tables
      value_tab       = lt_data
      return_tab      = lt_return
    exceptions
      parameter_error = 1
      no_values_found = 2
      others          = 3.

  if sy-subrc is not initial.
    message id sy-msgid type sy-msgty number sy-msgno
            with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  endif.

  read table lt_return into ls_return index 1.
  p_mpath = ls_return-fieldval.
  set parameter id &apos;ZMOCKUP_LOADER_SPATH&apos; field p_mpath.
endform.                    &quot;set_file_path

*&amp;---------------------------------------------------------------------*
*&amp;      Form  get_su3_value
*&amp;---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
form get_su3_value.
  data l_param type usr05-parva.

  call function &apos;G_GET_USER_PARAMETER&apos;
    exporting parameter_id    = &apos;ZMOCKUP_LOADER_SPATH&apos;
    importing parameter_value = l_param.

  if p_file is not initial.
    p_fpath = l_param.
    set parameter id &apos;ZMOCKUP_LOADER_SPATH&apos; field l_param.
  elseif p_mime is not initial.
    p_mpath = l_param.
    set parameter id &apos;ZMOCKUP_LOADER_SPATH&apos; field l_param.
  endif.
endform.                    &quot;get_su3_value</source>
</PROG>
