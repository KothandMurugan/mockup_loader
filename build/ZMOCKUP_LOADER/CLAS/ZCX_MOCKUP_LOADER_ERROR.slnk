<?xml version="1.0" encoding="utf-8"?>
<CLAS CLSNAME="ZCX_MOCKUP_LOADER_ERROR" VERSION="1" LANGU="E" DESCRIPT="Exception class for mockup loader" CATEGORY="40" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" RSTAT="K" CLSBCCAT="00" MSG_ID="SY" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CX_STATIC_CHECK">
 <implementing CLSNAME="ZCX_MOCKUP_LOADER_ERROR" REFCLSNAME="IF_T100_MESSAGE" VERSION="1" EXPOSURE="2" STATE="1" RELTYPE="1" EDITORDER="1 "/>
 <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
 <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
 <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
 <attribute CLSNAME="ZCX_MOCKUP_LOADER_ERROR" CMPNAME="CODE" VERSION="1" LANGU="E" DESCRIPT="Tech code for unit tests" EXPOSURE="2" STATE="1" EDITORDER="4 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CHAR2" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCX_MOCKUP_LOADER_ERROR" CMPNAME="METHNAME" VERSION="1" LANGU="E" DESCRIPT="Method where exception happened" EXPOSURE="2" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SCX_ATTRNAME" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCX_MOCKUP_LOADER_ERROR" CMPNAME="MSG" VERSION="1" LANGU="E" DESCRIPT="Text description" EXPOSURE="2" STATE="1" EDITORDER="3 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SCX_ATTRNAME" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCX_MOCKUP_LOADER_ERROR" CMPNAME="ZCX_MOCKUP_LOADER_ERROR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="12 " SRCCOLUMN1="4 " SRCROW2="19 " SRCCOLUMN2="33 " LOCKED="X" TYPESRC_LENG="323 " TYPESRC="begin of ZCX_MOCKUP_LOADER_ERROR,
      msgid type symsgid value &apos;SY&apos;,
      msgno type symsgno value &apos;499&apos;,
      attr1 type scx_attrname value &apos;METHNAME&apos;,
      attr2 type scx_attrname value &apos;MSG&apos;,
      attr3 type scx_attrname value &apos;&apos;,
      attr4 type scx_attrname value &apos;&apos;,
    end of ZCX_MOCKUP_LOADER_ERROR
"/>
 <inheritance CLSNAME="ZCX_MOCKUP_LOADER_ERROR" REFCLSNAME="CX_STATIC_CHECK" VERSION="1" STATE="1"/>
 <method CLSNAME="ZCX_MOCKUP_LOADER_ERROR" CMPNAME="RAISE" VERSION="1" LANGU="E" DESCRIPT="Raise the exception" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCX_MOCKUP_LOADER_ERROR" CMPNAME="RAISE" SCONAME="MSG" VERSION="1" LANGU="E" DESCRIPT="Error description" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZCX_MOCKUP_LOADER_ERROR" CMPNAME="RAISE" SCONAME="CODE" VERSION="1" LANGU="E" DESCRIPT="Error code" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CHAR2" PAROPTIONL="X"/>
  <exception CLSNAME="ZCX_MOCKUP_LOADER_ERROR" CMPNAME="RAISE" SCONAME="ZCX_MOCKUP_LOADER_ERROR" VERSION="1" LANGU="E" DESCRIPT="Exception class for mockup loader" MTDTYPE="0" EDITORDER="1 "/>
  <source>method RAISE.
  data:
        l_methname  type string,
        sys_call    type sys_calls,
        sys_stack   type sys_callst.

  &quot; Get stack information
  call function &apos;SYSTEM_CALLSTACK&apos;
    exporting max_level    = 2
    importing et_callstack = sys_stack.

  read table sys_stack into sys_call index 2.
  l_methname = sys_call-eventname &amp;&amp; &apos;():&apos;.

  raise exception type zcx_mockup_loader_error
    exporting
      methname = l_methname
      msg = msg
      code = code.

endmethod.</source>
 </method>
</CLAS>
